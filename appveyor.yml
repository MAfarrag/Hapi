# version format
version: 1.0.{build}
# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
#  only:
#    - master
  # blacklist
  except:
    - gh-pages

platform:
  - x86
  - x64

environment:
  # Appveyor machines come with miniconda already installed.
  CONDA_INSTALL_LOCN: "C:\\Miniconda-x64"
  CONDA_VERSION: 3

  matrix:
  - TOXENV: py37
  - TOXENV: py38
  - TOXENV: py39
  - TOXENV: py310

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
#skip_tags: true

# Skipping commits with particular message or from specific user
skip_commits:
  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
#  author: John                                      # Commit author's
  files:
    - .github/
    - docs/
    - recipe/
    - .ci_support/
    - .scripts/
    - conda/
    - mkdocs.yml
    - conda-forge.yml
    - README.md
    - LICENSE.md
    - CONTRIBUTING.md
    - .readthedocs.yml

# Including commits with particular message or from specific user
#only_commits:
#  message: /build/                # Start a new build if message contains 'build'
#  author: jack@company.com        # Start a new build for commit of user with email jack@company.com

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
#clone_folder: git@github.com:MAfarrag/Hapi.git
#clone_folder: https://github.com/MAfarrag/Hapi.git

install:
  # Clone simply to get the script for setting up Windows build environment.

  # for python 3.4 as it does not exist in conda channels
  # conda config --set restore_free_channel True
  # No need to install miniconda because appveyor comes with it.
  - cmd: SET PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\Scripts;%PATH%
  - cmd: SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%
#  - cmd: conda config --set always_yes yes --set changeps1 no
#  - cmd: conda update -q conda
#  - cmd: conda info -a
  # Create a new environment
  - cmd: conda create -q -n Hapi-env python=%PYTHON_VERSION% --yes
  - cmd: activate Hapi-env
  - cmd: conda clean --tarballs -y
  - cmd: conda clean --packages -y

  # Install various dependencies
  - cmd: conda config --add channels conda-forge
  #- cmd: while read requirement; do conda install --yes $requirement; done < requirement.txt
#  - cmd: FOR /F "delims=~" %f in (requirement.txt) DO (conda install f --yes )
  - cmd: conda install --yes --file requirement.txt
#  - cmd: pip install --upgrade --user pip
#  - cmd: pip install -r requirement.txt
  - cmd: conda update --yes -n base -c defaults conda
#  - cmd: conda env update -name Hapi-env --file environment.yml  --prune
  - cmd: python -V
  - cmd: python setup.py build_ext --inplace
  - cmd: python setup.py install
  - cmd: pip install --upgrade coveralls

build: false
# build Configuration, i.e. Debug, Release, etc.
# to add several configurations to build matrix:
configuration:
  - Debug
  - Release

test_script:
- cmd: python -m pytest -vvv --cov=Hapi
- cmd: coveralls
